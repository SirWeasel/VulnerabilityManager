import datetime
from time import sleep
from threading import Thread
import nmap

from scans.models import Result


class ScanTool:


    def __init__(self):
        self.nm = nmap.PortScanner()


    def set_ports(self, ports=None):
        for port in ports:
            print(port)

    def activate_scans(self, scans=None):
        for scan in scans:
            scan.last_scan = datetime.datetime.now()
            scan.status = "s"
            scan.save()
            Thread(target=self.perform_scan,args=(scan,)).start()
        pass
    def perform_scan(self,scan):
        print(scan.scan_title)
        #TODO PERFORM SCAN With provided scan argument
        scan.status="d"
        #TODO Update Results page
        #self.nm.scan(hosts="",arguments="-O")
        rez = self.create_results(scan)
        scan.result=rez
        scan.save()


        return

    def callback_result(self, host, scan_result):
        print('------------------')

        print(host, scan_result)
    def create_results(self,scan):
        for target in scan.scan_targets.assets.all():
            print("Hostname ; " + target.hostname)
            self.nm.scan(hosts=target.network_address,arguments='-A -T5 -p 80,53,9200',sudo=True)
            print(self.nm.scanstats())
        result_data = ""
        result = Result.objects.create(result_title=scan.scan_title+" results",result_data=result_data)

    #    asset_group_name = "AG:"
    #    for asset in queryset:
    #        asset_group_name += asset.hostname + ", "
    #    asset_group_name = asset_group_name[:-2]
    #    assetgr = AssetGroup.objects.create(name=asset_group_name)
    #    assetgr.assets.set(queryset)
        return result

    def get_os(self):
        pass